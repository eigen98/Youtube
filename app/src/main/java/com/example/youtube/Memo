MotionLayout 이용하여 화면 전환 UI 구성하기 (1)
    ->BottomNavigation 사용 -> 메뉴 레이아웃 생성 후 Navi와 menu 연결
    ->애니매이션영역이 일어나는 프래그먼트를 붙일 framelouout생성
    ->MotionLayout은 ConstraintLayout에서 애니메이션을 사용할 수 있는 확장된 layout
        ->프라그먼트에서 열려있는 상태로 구성먼저
        ->ConstraintLayout에서 MotionLayout으로 convert해줌 -> XML이 하나 자동 생성됨(시작과 끝 값이 변하는 것 기록)
        ->start는 내려와있을 때 end는 펼쳐짐으로 그려줌
        ->프래그먼트를 attach해줌 -> supportFragmentManager
        ->스와이프 핸들러 부착
        ->뷰바인딩 사용 gradle에 kotlinOption밑에 추가
        viewBInding{
                enabled = true
            }

MotionLayout 이용하여 화면 전환 UI 구성하기 (2)
영상 목록 API 만들기
    ->더미 비디오를 가지고 mocky서비스에 생성

    ->레트로핏 사용 전 데이터클래스들 생성 후 build.gradle추가


영상 목록 기본 구조 만들기
MotionLayout 과 RecyclerView 사이에 스크롤 가능하게 하기(1)
)MotionLayout 과 RecyclerView 사이에 스크롤 가능하게 하기(2)
ExoPlayer를 이용하여 동영상 재생하기
마무리하기
아웃트로
결과화면

이 챕터를 통해 배우는 것
MotionLayout 사용하기
Exoplayer 사용하기
MotionLayout
ConstraintLayout 라이브러리의 일부 (서브 클래스)
https://developer.android.com/training/constraint-layout/motionlayout/examples?hl=ko
레이아웃 전환과 UI 이동, 크기 조절 및 애니메이션에 사용
이기정님의 파트 4, 챕터 4, OTT 앱 인트로 따라하기 에서 더 자세히 후술
ExoPlayer
Google이 Android SDK 와 별도로 배포되는 오픈소스 프로젝트
오디오 및 동영상 재생 가능
오디오 및 동영상 재생 관련 강력한 기능들 포함
유튜브 앱에서 사용하는 라이브러리
https://exoplayer.dev/hello-world.html
Youtube
Retrofit 을 이용하여 영상 목록을 받아와 구성함

MotionLayout 을 이용하여 유튜브 영상 플레이어 화면전환 애니메이션을 구현함.

영상 목록을 클릭하여 ExoPlayer 를 이용하여 영상을 재생할 수 있음.